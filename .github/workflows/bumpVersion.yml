name: Bump Version

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  package-publish:
    name: Bump Version
    runs-on: ubuntu-latest

    if: "!contains(github.event.head_commit.message, '[shallow]')"

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get Current Version
        id: get-main-version
        run: |
          git checkout origin/main

          CURRENT_VERSION=$(cat package.json | jq -r .version)
          echo "Main branch version: $CURRENT_VERSION"
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Checkout PR branch
        run: git checkout ${{ github.event.pull_request.head.ref }}

      - name: Bump version based on PR title
        id: bump-version
        run: |
          # Extract PR title
          PR_TITLE="${{ github.event.pull_request.title }}"

          CURRENT_VERSION=$CURRENT_VERSION
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)

          if [[ "$PR_TITLE" == *"BREAK_POINT"* ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$PR_TITLE" == *"feat"* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ "$PR_TITLE" == *"fix"* ]]; then
            PATCH=$((PATCH + 1))
          else
            echo "No version bump required"
            exit 0
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

          # Use npm version command to bump version
          jq --arg newVersion "$NEW_VERSION" '.version = $newVersion' package.json > tmp.json && mv tmp.json package.json
          echo "Updated package.json with version $NEW_VERSION"

      - name: Commit updated package.json
        run: |
          git config --global user.name ${{ secrets.BOT_NAME }}"
          git config --global user.email ${{ secrets.BOT_EMAIL }}"
          git add ./package.json
          git commit -m "Bump version"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}
